#pragma once

#define BAUDRATE 9600

enum ProjectorType {
    nec, acer, benq
};

class Command {
    public:
    int* command;
    int length;
    Command(int* command, int length) : command(command), length(length) {}
    Command() {};
};

// NEC
/*
The checksum is calculated as follows.
① Add all preceding bytes of data.
② Use the value of the low-order one byte (eight bits) of the addition
result obtained in ① as the checksum.
*/
// INFO: Ezeket lehet hogy 0x0D vel kell kezdeni hogy működjön, le kell tesztelni

//Acer, Benq jelenleg működik
class Projector {
    int turnOnNecCodes[12] = {0x20, 0x88, 0x01, 0xff, 0x0C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0xB8};
    int turnOffNecCodes[12] = {0x20, 0x88, 0x01, 0xff, 0x0C, 2, 1, 0, 0, 0, 3, 0xBA};
    int sourceNecCode[8] = {0x20, 0x88, 0x01, 0xff, 0x0C,};

    int turnOnAcerCodes[11] = {0x2A, 0x20, 0x30, 0x20, 0x49, 0x52, 0x20, 0x30, 0x30, 0x31, 0x0D};
    int turnOffAcerCodes[11] = {0x2A, 0x20, 0x30, 0x20, 0x49, 0x52, 0x20, 0x30, 0x30, 0x32, 0x0D};
    int sourceAcerCodes[11] = {0x2A, 0x20, 0x30, 0x20, 0x49, 0x52, 0x20, 0x30, 0x33, 0x31, 0x0D};
    int freezeAcerCodes[11] = {0x2A, 0x20, 0x30, 0x20, 0x49, 0x52, 0x20, 0x30, 0x30, 0x37, 0x0D};

    int turnOnBenqCodes[10] = {0x0D, 0x2A, 0x70, 0x6F, 0x77, 0x3D, 0x6F, 0x6E, 0x23, 0x0D};
    int turnOffBenqCodes[11] = {0x0D, 0x2A, 0x70, 0x6F, 0x77, 0x3D, 0x6F, 0x66, 0x66, 0x23, 0x0D};
    int sourceBenqCodes[13] = {0x0D, 0x2A, 0x73, 0x6F, 0x75, 0x72, 0x3D, 0x68, 0x64, 0x6D, 0x69, 0x23, 0x0D};
    int source2BenqCodes[14] = {0x0D, 0x2A, 0x73, 0x6F, 0x75, 0x72, 0x3D, 0x68, 0x64, 0x6D, 0x69, 0x32, 0x23, 0x0D};
    
public:
    void printHexToSerial(Command);

    Command turnOnCodes;
    Command turnOffCodes;
    Command sourceCodes;
    Command source2Codes;

    Projector(ProjectorType projectoryType);
};



